{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/tokenAuth.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","console","log","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","tareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","ProyectoContext","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarProyecto","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","tareasproyecto","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGA_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","proyectoId","delete","Provider","children","TareaState","tareaReducer","params","tareas","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ed92c85.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;","import { createContext } from 'react';\r\n\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;\r\n\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Login = (props) => {\r\n\r\n\r\n    //Extraer los valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const {alerta, mostrarAlerta } = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { mensaje, autenticado, iniciarSesion } = authContext;\r\n\r\n    //En caso de usuario no existente o password incorrecto\r\n    useEffect(() => {\r\n        if(autenticado) {\r\n            props.history.push('/proyectos');\r\n        } \r\n\r\n        if(mensaje) {\r\n            console.log(mensaje);\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history])\r\n\r\n    //State para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    //Extraer usuario\r\n    const { email, password } = usuario;\r\n\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //Cuando el usuario quiere iniciar sesión\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar que no hay campos vacios\r\n        if(email.trim() === '' || password.trim() === ''){\r\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n        }\r\n\r\n        //Pasarlo al action\r\n        iniciarSesion({email, password});\r\n    }\r\n\r\n    return ( \r\n        <div className=\"form-usuario\">\r\n            {alerta ? (<div className={`alerta ${alerta.categoria}`} > {alerta.msg}</div>) : null}\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Iniciar sesión</h1>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu correo\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Iniciar sesión\" />\r\n                    </div>\r\n                </form>\r\n                <Link to={ '/nueva-cuenta'} className=\"enlace-cuenta\">\r\n                    Crear cuenta\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Login;","import React, {useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n\r\nconst NuevaCuenta = (props) => {\r\n\r\n    //Extraer los valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const {alerta, mostrarAlerta } = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { mensaje, autenticado, registrarUsuario } = authContext;\r\n\r\n    //En caso de registro duplicado o usuario autenticado\r\n    useEffect(() => {\r\n        if(autenticado) {\r\n            props.history.push('/proyectos');\r\n        }\r\n\r\n        if(mensaje) {\r\n            console.log(mensaje);\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history])\r\n\r\n    //State para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        nombre: '',\r\n        email: '',\r\n        password: '',\r\n        confirmar:''\r\n    });\r\n\r\n    //Extraer usuario\r\n    const { nombre, email, password, confirmar } = usuario;\r\n\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //Cuando el usuario quiere iniciar sesión\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar que no haya campos vacíos\r\n        if(nombre.trim() === '' || email.trim() === '' || password.trim() === '' || confirmar.trim() === '') {\r\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        //Password Mínimo de 6 caracteres\r\n        if(password.length < 6){\r\n            mostrarAlerta('El password debe contener al menos 6 caracteres', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        // Password identico a Confirmar\r\n        if(password !==  confirmar){\r\n            mostrarAlerta('Los passwords no son iguales', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        //Pasarlo al action\r\n        registrarUsuario({\r\n            nombre,email,password\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"form-usuario\">\r\n            {alerta ? (<div className={`alerta ${alerta.categoria}`} > {alerta.msg}</div>) : null}\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Crear cuenta</h1>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"nombre\">Nombre completo</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            placeholder=\"Nombre completo\"\r\n                            value={nombre}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu correo\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"confirmar\">Confirmar password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirmar\"\r\n                            name=\"confirmar\"\r\n                            placeholder=\"Confirma tu password\"\r\n                            value={confirmar}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Registrar\" />\r\n                    </div>\r\n                </form>\r\n                <Link to={ '/'} className=\"enlace-cuenta\">\r\n                    Iniciar sesión\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NuevaCuenta;","import { createContext } from 'react';\r\n\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;","import React, { Fragment, useState, useContext } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nconst NuevoProyecto = () => {\r\n\r\n    //Obtener el STATE del formulario\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { formulario, errorformulario,  mostrarFormulario, agregarProyecto, mostrarError} = proyectosContext;\r\n \r\n    const [proyecto, guardarProyecto] = useState({\r\n        nombre: ''\r\n    });\r\n\r\n    //Extraer el nombre del proyecto\r\n    const { nombre } = proyecto;\r\n\r\n    //cuando el usuario cambia el nombre del proyecto\r\n    const onChangeProyecto = e => {\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //cuando el usuario envia un proyecto\r\n    const onSubmitProyecto = e => {\r\n        e.preventDefault();\r\n        //Validar el proyecto\r\n        if(nombre == ''){\r\n            mostrarError();\r\n            return;\r\n        }\r\n        //agregar al state\r\n        agregarProyecto(proyecto);\r\n        //Reiniciar el form\r\n        guardarProyecto({\r\n            nombre:''\r\n        })\r\n        \r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-block btn-primario\"\r\n                onClick={ () => mostrarFormulario() }\r\n            >Nuevo proyecto </button>\r\n            { formulario ? \r\n                (\r\n                    <form\r\n                        className=\"formulario-nuevo-proyecto\"\r\n                        onSubmit={onSubmitProyecto}\r\n                    >\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre proyecto\"\r\n                        name=\"nombre\" \r\n                        value={nombre}\r\n                        onChange={onChangeProyecto}\r\n                    />\r\n\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-block\"\r\n                        value=\"Agregar proyecto\" \r\n                    />\r\n                    </form>\r\n                )\r\n                : null\r\n            }\r\n            { errorformulario  ? <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p> : null}\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default NuevoProyecto;","import { createContext } from 'react';\r\n\r\nconst tareaContext = createContext();\r\n\r\nexport default tareaContext;","import React, { useContext } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst Proyecto = ({proyecto}) => {\r\n        //Obtener el STATE de proyectos\r\n        const proyectosContext = useContext(proyectoContext);\r\n        const { proyectoActual } = proyectosContext;\r\n\r\n        //obtener el STATE de las tareas\r\n        const tareasContext = useContext(tareaContext);\r\n        const { obtenerTareas } = tareasContext;\r\n\r\n        //Funcion para definir el proyecto actual\r\n        const seleccionarProyecto = id => {\r\n            proyectoActual(id); //asigan un proyecto seleccionado \r\n            obtenerTareas(id);  //Filtra las tareas del proyecto\r\n        }\r\n    return ( \r\n        <li>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-blank\"\r\n                onClick={() => seleccionarProyecto(proyecto._id) }\r\n            >{proyecto.nombre}</button>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\r\nimport Proyecto from './Proyecto';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport {CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst ListadoProyectos = () => {\r\n\r\n    const proyectosContext = useContext(ProyectoContext);\r\n    const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\r\n\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    useEffect(()=>{\r\n        //Si hay un error\r\n        if (mensaje){\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        obtenerProyectos();\r\n\r\n        // eslint-disable-next-line\r\n    },[mensaje]);  \r\n\r\n    if(proyectos.length === 0) return <p>No hay proyectos</p>;\r\n\r\n    return ( \r\n        <ul className=\"listado-proyectos\">\r\n            { alerta ? (<div className={`alerta ${alerta.categoria}`} >{ alerta.msg }</div>) : null }\r\n            <TransitionGroup>\r\n                {proyectos.map(proyecto => (\r\n                    <CSSTransition\r\n                        key={proyecto._id}\r\n                        timeout={300}\r\n                        classNames=\"proyecto\"\r\n                    >\r\n                        <Proyecto\r\n                            proyecto={proyecto}\r\n                        />\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n\r\n        </ul>\r\n     );\r\n}\r\n \r\nexport default ListadoProyectos;","import React from 'react';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\r\nconst Sidebar = () => {\r\n    return ( \r\n        <aside>\r\n            <h1>MERN<span>Tasks</span></h1>\r\n\r\n            <NuevoProyecto />\r\n\r\n            <div className=\"proyectos\">\r\n                <h2>Tus proyectos</h2>\r\n                <ListadoProyectos />\r\n            </div>\r\n\r\n        </aside>\r\n     );\r\n}\r\n \r\nexport default Sidebar;","import React, { useContext, useEffect } from 'react';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Barra = () => {\r\n\r\n    //Extraer la información de autenticación\r\n    const authContext = useContext(AuthContext);\r\n    const { usuario, usuarioAutenticado, cerrarSesion } = authContext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return ( \r\n        <header className=\"app-header\">\r\n            { usuario ? <p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p> : null}\r\n            \r\n            <nav className=\"nav-principal\">\r\n                <button\r\n                    className= \"btn btn-blank cerrar-sesion\"\r\n                    onClick= {() => cerrarSesion() }\r\n                >Cerrar sesión</button>\r\n            </nav>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Barra;","import React, { useContext, useState, useEffect } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst FormTarea = () => {\r\n\r\n    //Extraer si un proyecto esta activo\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto } = proyectosContext;\r\n\r\n    //obtener el STATE de las tareas\r\n    const tareasContext = useContext(tareaContext);\r\n    const { tareaseleccionada, errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea } = tareasContext;\r\n\r\n    //efect que detecta si hay una tarea seleccionada\r\n    useEffect(() => {\r\n        if(tareaseleccionada !== null){\r\n           guardarTarea(tareaseleccionada)\r\n        }else{\r\n            guardarTarea({\r\n                nombre: ''\r\n            })\r\n        }\r\n    }, [tareaseleccionada]);\r\n\r\n\r\n    //State del formulario\r\n    const [tarea, guardarTarea] = useState({\r\n        nombre: ''\r\n    })\r\n\r\n    // Extraer el nombre del proyecto\r\n    const { nombre } = tarea;\r\n    \r\n    //Si no hay proyecto seleccionado\r\n    if(!proyecto) return null;\r\n\r\n    //Array Destructuring para extraer el proyecto actual\r\n    const [proyectoActual] = proyecto;\r\n\r\n    //Leer los valores del formulario\r\n    const handleChange = e => {\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        //validar\r\n        if(nombre.trim() === ''){\r\n            validarTarea();\r\n            console.log('valido tarea');\r\n            return;\r\n        }\r\n        //Validar si es edicion o nueva tarea\r\n        if(tareaseleccionada === null){\r\n            //Agregar la nueva tarea\r\n            tarea.proyecto = proyectoActual._id;\r\n            agregarTarea(tarea);\r\n        } else {\r\n            actualizarTarea(tarea);\r\n\r\n            //Elimina tarea seleccionada\r\n            limpiarTarea();\r\n        }\r\n        \r\n        //Obtener y filtrar las tareas del proyecto actual\r\n        obtenerTareas(proyectoActual._id);\r\n        //Reiniciar form\r\n        guardarTarea({\r\n            nombre:''\r\n        });\r\n    }\r\n\r\n    return ( \r\n        <div className=\"formulario\">\r\n            <form\r\n                onSubmit={onSubmit}\r\n            >\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre de la tarea\"\r\n                        name=\"nombre\"\r\n                        value={nombre}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-submit btn-block\"\r\n                        value={tareaseleccionada ? 'Editar tarea' :'Agregar tarea'}\r\n                    />\r\n                </div>\r\n            </form>\r\n            {errortarea ? <p className=\"mensaje error\" >El mensaje de la tarea es obligatorio</p> : null}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FormTarea;","import React, { useContext } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\n\r\nconst Tarea = ({tarea}) => {\r\n\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto, eliminarProyecto } = proyectosContext;\r\n\r\n    //obtener el STATE de las tareas\r\n    const tareasContext = useContext(tareaContext);\r\n    const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual } = tareasContext;\r\n\r\n    //Extraer el proyecto\r\n    const [proyectoActual] = proyecto;\r\n\r\n    //Funcion de eliminar una tarea\r\n    const tareaEliminar = id => {\r\n        eliminarTarea(id, proyectoActual._id);\r\n        obtenerTareas(proyectoActual.id);\r\n    }\r\n\r\n    //Funcion que modifica el estado de las tareas\r\n    const cambiarEstado = tarea => {\r\n        if(tarea.estado){\r\n            tarea.estado = false\r\n        } else {\r\n            tarea.estado = true\r\n        }\r\n        actualizarTarea(tarea)\r\n    }\r\n\r\n    //Agrega una tarea actual cuando se quiere editar\r\n    const seleccionarTarea = tarea => {\r\n        guardarTareaActual(tarea);\r\n        \r\n    }\r\n\r\n    return ( \r\n        <li className=\"tarea sombra\">\r\n            <p>{tarea.nombre}</p>\r\n            <div className=\"estado\">\r\n                {tarea.estado\r\n                ?   (\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"completo\"\r\n                        onClick={() => cambiarEstado(tarea)}\r\n                    >Completo</button>\r\n                    )\r\n                :   (\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"incompleto\"\r\n                        onClick={() => cambiarEstado(tarea)}\r\n                    >Incompleto</button>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"acciones\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primario\"\r\n                    onClick={() => seleccionarTarea(tarea)}\r\n                >Editar</button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secundario\"\r\n                    onClick={() => tareaEliminar(tarea._id)}\r\n                >Eliminar</button>\r\n            </div>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Tarea;","import React, { Fragment, useContext } from 'react';\r\nimport Tarea from './Tarea';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst ListadoTareas = () => {\r\n\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto, eliminarProyecto } = proyectosContext;\r\n\r\n    //obtener el STATE de las tareas\r\n    const tareasContext = useContext(tareaContext);\r\n    const { tareasproyecto } = tareasContext;\r\n\r\n    //Si no hay proyecto seleccionado\r\n    if(!proyecto) return <h2>Selecciona un proyecto</h2>\r\n\r\n    //Array Destructuring para extraer el proyecto actual\r\n    const [proyectoActual] = proyecto;\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2> Proyecto: {proyectoActual.nombre} </h2>\r\n            <ul className=\"listado-tareas\">\r\n                {\r\n                    tareasproyecto.length === 0 \r\n                        ?(<li className=\"listado-tareas\"><p>No hay tareas</p></li>)\r\n                        : \r\n                        <TransitionGroup>\r\n                            {tareasproyecto.map(tarea =>(\r\n                            <CSSTransition\r\n                                key={tarea.id}\r\n                                timeout={200}\r\n                                classNames=\"tarea\"\r\n                            > \r\n                                <Tarea\r\n                                tarea={tarea}\r\n                            />\r\n                            </CSSTransition>\r\n                            ))}\r\n                        </TransitionGroup>\r\n                }\r\n            </ul>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-eliminar\"\r\n                onClick={() => eliminarProyecto(proyectoActual._id)}\r\n            >Eliminar Proyecto &times;</button>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default ListadoTareas;","import React, { useContext, useEffect } from 'react';\r\nimport Sidebar from '../layout/Sidebar';\r\nimport Barra from '../layout/Barra';\r\nimport FormTarea from '../tareas/FormTarea';\r\nimport ListadoTareas from '../tareas/ListadoTareas';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Proyectos = () => {\r\n\r\n    //Extraer la información de autenticación\r\n    const authContext = useContext(AuthContext);\r\n    const { usuarioAutenticado } = authContext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return ( \r\n        <div className=\"contenedor-app\">\r\n            <Sidebar />\r\n            <div className=\"seccion-principal\">\r\n                <Barra />\r\n                <main>\r\n\r\n                    <FormTarea />\r\n\r\n                    <div className=\"contenedor-tareas\">\r\n                        <ListadoTareas />\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Proyectos;","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\r\nexport const AGREGA_PROYECTO = 'AGREGA_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO'; \r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO'; \r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA'; \r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';","import { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGA_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, \r\n    ELIMINAR_PROYECTO, PROYECTO_ERROR } from \"../../types\";\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case FORMULARIO_PROYECTO:\r\n            return {\r\n                ...state,\r\n                formulario: true\r\n            }\r\n        case OBTENER_PROYECTOS:\r\n            return {\r\n                ...state,\r\n                proyectos: action.payload\r\n            }\r\n        case AGREGA_PROYECTO:\r\n            return {\r\n                ...state,\r\n                proyectos: [...state.proyectos, action.payload],\r\n                formulario: false,\r\n                errorformulario: false\r\n            }\r\n        case VALIDAR_FORMULARIO:\r\n            return {\r\n                ...state,\r\n                errorformulario: true\r\n            }\r\n        case PROYECTO_ACTUAL:\r\n            return {\r\n                ...state,\r\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload )\r\n            }\r\n        case ELIMINAR_PROYECTO:\r\n            return {\r\n                ...state,\r\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload ),\r\n                proyecto: null\r\n            }\r\n        case PROYECTO_ERROR:\r\n            return {\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL : process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React, { useReducer } from 'react';\r\n\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGA_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, \r\n    ELIMINAR_PROYECTO, PROYECTO_ERROR } from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst ProyectoState = props => {\r\n\r\n    const initialState = {\r\n        proyectos : [],\r\n        formulario : false,\r\n        errorformulario: false,\r\n        proyecto: null,\r\n        mensaje: null\r\n    }\r\n    //dispatch para crear las acciones\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\r\n    //serie de funciones para el CRUD\r\n    const mostrarFormulario = () => {\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n    //Obtener proyectos\r\n    const obtenerProyectos = async () => {\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/proyectos');\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: resultado.data.proyectos\r\n            })\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n    //Agregar nuevo proyecto\r\n    const agregarProyecto = async proyecto => {\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\r\n            console.log( resultado );\r\n            dispatch({\r\n                type: AGREGA_PROYECTO,\r\n                payload: resultado.data\r\n            })\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    //Validar el formulario por errores\r\n    const mostrarError = () => {\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n\r\n    //Selecciona el proyecto donde el usuario dio clic\r\n    const proyectoActual = proyectoId => {\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n\r\n    //Elimina un proyecto\r\n    const eliminarProyecto = async proyectoId =>{\r\n        try {\r\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n            dispatch({\r\n                type: ELIMINAR_PROYECTO,\r\n                payload: proyectoId\r\n            })\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    } \r\n    return(\r\n        <proyectoContext.Provider\r\n            value={{\r\n                proyectos: state.proyectos,\r\n                formulario: state.formulario,\r\n                errorformulario: state.errorformulario,\r\n                proyecto: state.proyecto,\r\n                mensaje: state.mensaje,\r\n                mostrarFormulario,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                mostrarError,\r\n                proyectoActual,\r\n                eliminarProyecto\r\n            }}\r\n        >\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;","\r\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, \r\n    ELIMINAR_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types/index'\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case TAREAS_PROYECTO:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            }\r\n        case AGREGAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: [action.payload, ...state.tareasproyecto],\r\n                errortarea: false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return {\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n        case ELIMINAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload :  tarea)\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return {\r\n                ...state,\r\n                tareaseleccionada: action.payload\r\n            }\r\n        case LIMPIAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer } from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport tareaReducer from './tareaReducer';\r\n\r\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, \r\n     TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types/index'\r\n\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst TareaState = props => {\r\n    const initialState = {\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaseleccionada: null\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(tareaReducer, initialState);\r\n\r\n    //Crear las funciones\r\n    const obtenerTareas = async proyecto => {\r\n        console.log(proyecto)\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/tareas', { params: { proyecto }});\r\n            console.log(resultado);\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //Agregar una tarea al proyecto seleccionado\r\n    const agregarTarea = async tarea => {\r\n        console.log(tarea);\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: tarea\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    //Validar y muestra error\r\n    const validarTarea = () => {\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n\r\n    //Eliminar tarea por ID\r\n    const eliminarTarea = async (id, proyecto) => {\r\n        try {\r\n            await clienteAxios.delete(`/api/tareas/${id}`, {params: { proyecto}});\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n        //Edita o modifica una tarea\r\n    const actualizarTarea = async tarea => {\r\n        try {\r\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\r\n            console.log(resultado);\r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tarea\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //Extrae una tarea para edición\r\n    const guardarTareaActual = tarea => {\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n    //Elimina la tarea seleccionada\r\n    const limpiarTarea = () => {\r\n        dispatch({\r\n            type: LIMPIAR_TAREA\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TareaContext.Provider\r\n            value={{\r\n                tareasproyecto: state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaseleccionada: state.tareaseleccionada,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>    \r\n    )\r\n}\r\n\r\nexport default TareaState;","import {MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case MOSTRAR_ALERTA:\r\n            return {\r\n                alerta: action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return {\r\n                alerta: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer } from 'react';\r\nimport alertaReducer from './alertaReducer';\r\nimport alertaContext from './alertaContext';\r\n\r\nimport {MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\r\n\r\nconst AlertaState = props => {\r\n    const initialState = {\r\n        alerta:null\r\n    }\r\n\r\n    const [ state, dispatch ] = useReducer(alertaReducer, initialState);\r\n\r\n    //Funciones\r\n    const mostrarAlerta = (msg, categoria) => {\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: {\r\n                msg,\r\n                categoria\r\n            }\r\n        });\r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: OCULTAR_ALERTA\r\n            })\r\n        }, 5000);\r\n    }\r\n    return (\r\n        <alertaContext.Provider\r\n            value={{\r\n                alerta: state.alerta,\r\n                mostrarAlerta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </alertaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertaState;","import {REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case REGISTRO_EXITOSO:\r\n        case LOGIN_EXITOSO:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false\r\n            }\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                usuario: action.payload,\r\n                cargando: false\r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                usuario: null,\r\n                autenticado: null,\r\n                mensaje: action.payload,\r\n                cargando: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import clienteAxios from \"./axios\";\r\n\r\nconst tokenAuth = token => {\r\n    if(token) {\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\r\n    }else{\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React, { useReducer } from 'react';\r\nimport AuthReducer from './authReducer';\r\nimport AuthContext from './authContext';\r\nimport clienteAxios from '../../config/axios';\r\nimport tokenAuth from '../../config/tokenAuth';\r\n\r\nimport {REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION} from '../../types';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null,\r\n        cargando: true\r\n    }\r\n\r\n    const [ state, dispatch ] = useReducer(AuthReducer, initialState);\r\n\r\n    const registrarUsuario = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\r\n            console.log(respuesta);\r\n\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n            //Obtener el usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n            console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg:error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    //Retorna el usuario autenticado\r\n    const usuarioAutenticado = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            //TODO funcion para enviar el token por headers\r\n            tokenAuth(token);\r\n        }\r\n\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth');\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data.usuario\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: LOGIN_ERROR\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    //Cuando el usuario inicia sesión\r\n    const iniciarSesion = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/auth', datos);\r\n            dispatch({\r\n                type: LOGIN_EXITOSO,\r\n                payload: respuesta.data \r\n            })\r\n            //Obtener usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n            console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    //Cierra la sesión del usuario\r\n    const cerrarSesion = () => {\r\n        dispatch({\r\n            type: CERRAR_SESION\r\n        })\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                cargando: state.cargando,\r\n                registrarUsuario,\r\n                iniciarSesion,\r\n                usuarioAutenticado,\r\n                cerrarSesion\r\n            }}\r\n        >{props.children}\r\n\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;","import React, { useContext, useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst RutaPrivada = ({ component: Component, ...props }) => {\r\n    const authContext = useContext(AuthContext);\r\n    const { autenticado, cargando,  usuarioAutenticado } = authContext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return ( \r\n        <Route { ...props } render = { props => !autenticado && !cargando ? (\r\n            <Redirect to= \"/\" />\r\n        ): (\r\n            <Component {...props} />\r\n        )}\r\n        />\r\n     );\r\n}\r\n \r\nexport default RutaPrivada;\r\n","import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\n\nimport ProyectoState from './context/proyectos/proyectoState';\nimport TareaState from './context/tareas/tareaState';\nimport AlertaState from './context/alertas/alertaState';\nimport AuthState from './context/autenticacion/authState';\nimport tokenAuth from './config/tokenAuth';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n//Revisar si hay token\nconst token = localStorage.getItem('token');\nif(token){\n  tokenAuth(token);\n}\n\nfunction App() {\n\n  console.log(process.env.REACT_APP_BACKEND_URL);\n\n  return (\n    <ProyectoState>\n        <TareaState>\n          <AlertaState>\n            <AuthState>\n              <Router>\n                <Switch>\n                  <Route exact path=\"/\" component={Login} />\n                  <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                  <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n                </Switch>\n              </Router>\n            </AuthState>\n          </AlertaState>\n        </TareaState>\n      </ProyectoState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}